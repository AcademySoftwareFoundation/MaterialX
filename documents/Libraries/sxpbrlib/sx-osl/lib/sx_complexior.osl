// "Artist Friendly Metallic Fresnel", Ole Gulbrandsen, 2014
// http://jcgt.org/published/0003/04/03/paper.pdf

color sx_get_reflectivity(vector n, vector k)
{
    vector nm1 = n - 1;
    vector np1 = n + 1;
    vector k2  = k * k;
    return (nm1*nm1 + k2) / (np1*np1 + k2);
}

color sx_get_edgetint(vector n, color reflectivity)
{
    color r = reflectivity;
    color r_sqrt = sqrt(r);
    color n_min = (1.0 - r) / (1.0 + r);
    color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
    return (n_max - n) / (n_max - n_min);
}

void sx_complexior(color reflectivity, color edgetint, output vector n, output vector k)
{
   color r = clamp(reflectivity, 0.0, 0.99);
   color g = edgetint;

   color r_sqrt = sqrt(r);
   color n_min = (1.0 - r) / (1.0 + r);
   color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
   n = mix(n_max, n_min, g);

   color np1 = n + 1.0;
   color nm1 = n - 1.0;
   color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
   k2 = max(k2, 0.0);
   k = sqrt(k2);
}
