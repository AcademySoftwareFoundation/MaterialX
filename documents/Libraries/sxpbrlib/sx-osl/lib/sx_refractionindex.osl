// "Artist Friendly Metallic Fresnel", Ole Gulbrandsen, 2014
// http://jcgt.org/published/0003/04/03/paper.pdf

void sx_complex_to_artistic_ior(vector ior, vector extinction, output color reflectivity, output color edgecolor)
{
    vector nm1 = ior - 1.0;
    vector np1 = ior + 1.0;
    vector k2  = extinction * extinction;
    vector r = (nm1*nm1 + k2) / (np1*np1 + k2);
    reflectivity = r;

    vector r_sqrt = sqrt(r);
    vector n_min = (1.0 - r) / (1.0 + r);
    vector n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
    edgecolor = (n_max - ior) / (n_max - n_min);
}

void sx_artistic_to_complex_ior(color reflectivity, color edgecolor, output vector ior, output vector extinction)
{
    color r = clamp(reflectivity, 0.0, 0.99);
    color r_sqrt = sqrt(r);
    color n_min = (1.0 - r) / (1.0 + r);
    color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
    ior = mix(n_max, n_min, edgecolor);

    color np1 = ior + 1.0;
    color nm1 = ior - 1.0;
    color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
    k2 = max(k2, 0.0);
    extinction = sqrt(k2);
}
