<?xml version="1.0" encoding="UTF-8"?>
<materialx version="1.36">

  <!-- D A T A  T Y P E S -->

  <typedef name="BSDF" doc="Bidirectional scattering distribution function"/>
  <typedef name="EDF" doc="Emission distribution function"/>
  <typedef name="VDF" doc="Volume distribution function"/>

  <!-- N O D E S -->

  <!--
    Node: <diffusebsdf>
    A BSDF node for pure diffuse reflection.
  -->
  <nodedef name="ND_diffusebsdf" node="diffusebsdf" type="BSDF" nodecategory="shaderx"
           doc="A BSDF node for pure diffuse reflections.">
    <input name="reflectance" type="color3" value="0.8, 0.8, 0.8"/>
    <input name="roughness" type="float" value="1.0"/>
    <input name="normal" type="vector3" defaultgeomprop="normal"/>
  </nodedef>

  <!--
    Node: <translucentbsdf>
    A BSDF node for pure diffuse transmission.
  -->
  <nodedef name="ND_translucentbsdf" node="translucentbsdf" type="BSDF" nodecategory="shaderx"
           doc="A BSDF node for pure diffuse transmission.">
    <input name="transmittance" type="color3" value="0.8, 0.8, 0.8"/>
    <input name="normal" type="vector3" defaultgeomprop="normal"/>
  </nodedef>

  <!--
    Node: <transparentbsdf>
    A BSDF node for straight transmission.
  -->
  <nodedef name="ND_transparentbsdf" node="transparentbsdf" type="BSDF" nodecategory="shaderx"
           doc="A BSDF node for straight transmission.">
    <input name="transmittance" type="color3"/>
  </nodedef>

  <!--
    Node: <coatingbsdf>
    A BSDF node for specular to glossy reflection.
  -->
  <nodedef name="ND_coatingbsdf" node="coatingbsdf" type="BSDF" nodecategory="shaderx"
           doc="A BSDF node for specular to glossy reflection.">
    <input name="reflectance" type="color3" value="1.0, 1.0, 1.0"/>
    <input name="ior" type="float" value="1.52"/>
    <input name="roughness" type="float" value="0.2"/>
    <input name="anisotropy" type="float" value="0.0"/>
    <input name="normal" type="vector3" defaultgeomprop="normal"/>
    <input name="tangent" type="vector3" defaultgeomprop="tangent"/>
    <input name="distribution" type="string" value="ggx"/>
    <input name="base" type="BSDF"/>
  </nodedef>

  <!--
    Node: <refractionbsdf>
    A BSDF node for specular to glossy transmission.
  -->
  <nodedef name="ND_refractionbsdf" node="refractionbsdf" type="BSDF" nodecategory="shaderx" 
           doc="A BSDF node for specular to glossy transmission.">
    <input name="transmittance" type="color3" value="1.0, 1.0, 1.0"/>
    <input name="ior" type="float" value="1.52"/>
    <input name="roughness" type="float" value="0.2"/>
    <input name="anisotropy" type="float" value="0.0"/>
    <input name="normal" type="vector3" defaultgeomprop="normal"/>
    <input name="tangent" type="vector3" defaultgeomprop="tangent"/>
    <input name="distribution" type="string" value="ggx"/>
    <input name="interior" type="VDF"/>
  </nodedef>

  <!--
    Node: <uniformedf>
    An EDF node for uniform emission.
  -->
  <nodedef name="ND_uniformedf" node="uniformedf" type="EDF" nodecategory="shaderx"
           doc=" An EDF node for uniform emission.">
    <input name="intensity" type="color3" value="1.0, 1.0, 1.0"/>
  </nodedef>

  <!--
    Node: <conicaledf>
    An EDF node for uniform emission.
  -->
  <nodedef name="ND_conicaledf" node="conicaledf" type="EDF" nodecategory="shaderx"
           doc=" An EDF node for conical emission.">
    <input name="intensity" type="color3" value="1.0, 1.0, 1.0"/>
    <input name="innerConeAngle" type="float" value="0.7" doc=""/>
    <input name="outerConeAngle" type="float" value="0.7" doc=""/>
    <input name="normal" type="vector3" defaultgeomprop="normal"/>
  </nodedef>

  <!--
    Node: <mixbsdf>
    A node for mixing BSDF's.
  -->
  <nodedef name="ND_mixbsdf" node="mixbsdf" type="BSDF" nodecategory="shaderx"
           doc="A node for mixing BSDF's as: in1 * weight + in2 * (1 - weight).">
    <input name="in1" type="BSDF" doc="First BSDF."/>
    <input name="in2" type="BSDF" doc="Second BSDF."/>
    <input name="weight" type="float" value="1.0" doc="Mixing weight, range [0, 1]."/>
  </nodedef>

  <!--
    Node: <mixedf>
    A node for mixing EDF's.
  -->
  <nodedef name="ND_mixedf" node="mixedf" type="EDF" nodecategory="shaderx"
           doc="A node for mixing EDF's as: in1 * weight + in2 * (1 - weight).">
    <input name="in1" type="EDF" doc="First EDF."/>
    <input name="in2" type="EDF" doc="Second EDF."/>
    <input name="weight" type="float" value="1.0" doc="Mixing weight, range [0, 1]."/>
  </nodedef>

  <!--
    Node: <surface>
    Construct a surface shader from scattering and emission distribution functions.
  -->
  <nodedef name="ND_surface" node="surface" type="surfaceshader" nodecategory="shaderx"
           doc="A constructor node for the surfaceshader type.">
    <input name="bsdf" type="BSDF" doc="Distribution function for surface scattering."/>
    <input name="edf" type="EDF" doc="Distribution function for surface emission."/>
    <input name="opacity" type="float" value="1.0" doc="Surface cutout opacity"/>
  </nodedef>

  <!--
    Node: <layeredsurface>
    A node for layering a surface shader on top of another surface shader.
  -->
  <nodedef name="ND_layeredsurface" node="layeredsurface" type="surfaceshader" nodecategory="shaderx"
           doc="A node for layering a surface shader on top of another surface shader.">
    <input name="top" type="surfaceshader" doc="Top layer surface shader."/>
    <input name="base" type="surfaceshader" doc="Base layer surface shader."/>
    <input name="weight" type="float" value="1.0" doc="Mixing weight, range [0, 1]."/>
  </nodedef>

  <!--
    Node: <light>
    Construct a light shader from emission distribution functions.
  -->
  <nodedef name="ND_light" node="light" type="lightshader" nodecategory="shaderx"
           doc="A constructor node for the lightshader type.">
    <input name="edf" type="EDF" doc="Distribution function for light emission."/>
    <input name="intensity" type="float" value="1.0" doc="Multiplier for the light intensity"/>
    <input name="exposure" type="float" value="0.0" doc="Exposure control for the light intensity"/>
  </nodedef>

  <!--
    Node: <pointlight>
  -->
  <nodedef name="ND_pointlight" node="pointlight" type="lightshader" nodecategory="shaderx"
           doc="A light shader node of 'point' type.">
    <input name="position" type="vector3" doc="Light source position."/>
    <input name="color" type="color3" doc="Light color."/>
    <input name="intensity" type="float" doc="Light intensity."/>
    <input name="decayRate" type="float" value="2.0" doc="Light decay exponent. Defaults to 2 for quadratic decay."/>
  </nodedef>

  <!--
    Node: <directionallight>
  -->
  <nodedef name="ND_directionallight" node="directionallight" type="lightshader" nodecategory="shaderx"
           doc="A light shader node of 'directional' type.">
    <input name="direction" type="vector3" doc="Light source direction."/>
    <input name="color" type="color3" doc="Light color."/>
    <input name="intensity" type="float" doc="Light intensity."/>
  </nodedef>

  <!--
    Node: <spotlight>
  -->
  <nodedef name="ND_spotlight" node="spotlight" type="lightshader" nodecategory="shaderx"
           doc="A light shader node of 'spot' type.">
    <input name="position" type="vector3" doc="Light source position."/>
    <input name="direction" type="vector3" doc="Light source direction."/>
    <input name="color" type="color3" doc="Light color."/>
    <input name="intensity" type="float" doc="Light intensity."/>
    <input name="decayRate" type="float" value="2.0" doc="Light decay exponent. Defaults to 2 for quadratic decay."/>
    <input name="innerConeAngle" type="float" doc="Inner cone angle."/>
    <input name="outerConeAngle" type="float" doc="Outer cone angle."/>
  </nodedef>

  <!-- <standardsurface> -->
  <nodedef name="ND_standardsurface" node="standardsurface" type="surfaceshader" nodecategory="surfaceshader"
           doc="A surface uber shader based on the Arnold standard surface shader">
      <input name="base" type="float" value="0.8" />
      <input name="base_color" type="color3" value="1, 1, 1" />
      <input name="diffuse_roughness" type="float" value="0" />
      <input name="specular" type="float" value="1" />
      <input name="specular_color" type="color3" value="1, 1, 1" />
      <input name="specular_roughness" type="float" value="0.1" />
      <input name="specular_IOR" type="float" value="1.52" />
      <input name="specular_anisotropy" type="float" value="0" />
      <input name="specular_rotation" type="float" value="0" />
      <input name="metalness" type="float" value="0" />
      <input name="transmission" type="float" value="0" />
      <input name="transmission_color" type="color3" value="1, 1, 1" />
      <input name="transmission_depth" type="float" value="0" />
      <input name="transmission_scatter" type="color3" value="0, 0, 0" />
      <input name="transmission_scatter_anisotropy" type="float" value="0" />
      <input name="transmission_dispersion" type="float" value="0" />
      <input name="transmission_extra_roughness" type="float" value="0" />
      <input name="subsurface" type="float" value="0" />
      <input name="subsurface_color" type="color3" value="1, 1, 1" />
      <input name="subsurface_radius" type="color3" value="1, 1, 1" />
      <input name="subsurface_scale" type="float" value="1" />
      <input name="thin_walled" type="boolean" value="false" />
      <input name="normal" type="vector3" value="0, 0, 0" defaultgeomprop="normal"/>
      <input name="tangent" type="vector3" value="0, 0, 0" defaultgeomprop="tangent"/>
      <input name="coat" type="float" value="0" />
      <input name="coat_color" type="color3" value="1, 1, 1" />
      <input name="coat_roughness" type="float" value="0.1" />
      <input name="coat_IOR" type="float" value="1.5" />
      <input name="coat_normal" type="vector3" value="0, 0, 0" />
      <input name="thin_film_thickness" type="float" value="0" />
      <input name="thin_film_IOR" type="float" value="1.5" />
      <input name="emission" type="float" value="0" />
      <input name="emission_color" type="color3" value="1, 1, 1" />
      <input name="opacity" type="color3" value="1, 1, 1" />
      <input name="caustics" type="boolean" value="false" />
      <input name="internal_reflections" type="boolean" value="true" />
      <input name="exit_to_background" type="boolean" value="false" />
      <input name="indirect_diffuse" type="float" value="1" />
      <input name="indirect_specular" type="float" value="1" />
  </nodedef>

</materialx>
