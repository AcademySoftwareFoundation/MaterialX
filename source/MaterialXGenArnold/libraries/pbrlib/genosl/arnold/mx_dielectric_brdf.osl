#include "pbrlib/genosl/lib/mx_microfacet_specular.osl"

void mx_dielectric_brdf(float weight, color reflectance, float ior, vector2 roughness, normal N, vector U, string distribution, BSDF base, thinfilm tf, output BSDF result)
{
    if (weight < M_FLOAT_EPS)
    {
        result = base;
        return;
    }

    float NdotV = clamp(dot(N,-I), M_FLOAT_EPS, 1.0);
    float avgRoughness = mx_average_roughness(roughness);

    // Calculate directional albedo since we need
    // to attenuate the base layer according to this.
    float dirAlbedo = mx_ggx_directional_albedo(NdotV, avgRoughness, ior);

    // NOTE: No compensation for multiscatter is done here since this is already
    // handled internally in Arnold's microfacet closure.
    result = reflectance * weight * microfacet(distribution, N, U, roughness.x, roughness.y, ior, false)
             + base * (1.0 - dirAlbedo * weight);
}
