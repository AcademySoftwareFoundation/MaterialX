#include "pbrlib/genosl/lib/mx_microfacet_specular.osl"

void mx_dielectric_bsdf(float weight, color tint, float ior, vector2 roughness, normal N, vector U, string distribution, string scatter_mode, output BSDF bsdf)
{
    // NOTE: No compensation for multiscatter is done here since this is already
    // handled internally in Arnold's microfacet closure.

    if (scatter_mode == "T")
    {
        bsdf.response = tint * weight * microfacet(distribution, N, U, roughness.x, roughness.y, ior, 1);
        bsdf.throughput = tint * weight;
        return;
    }

    if (scatter_mode == "R")
    {
        bsdf.response = tint * weight * microfacet(distribution, N, U, roughness.x, roughness.y, ior, 0);

        // Calculate throughput from directional albedo.
        float NdotV = clamp(dot(N,-I), M_FLOAT_EPS, 1.0);
        float avgRoughness = mx_average_roughness(roughness);
        float dirAlbedo = mx_ggx_dir_albedo(NdotV, avgRoughness, ior) * comp;
        bsdf.throughput = 1.0 - dirAlbedo * weight;
    }
    else
    {
        bsdf.response = tint * weight * microfacet(distribution, N, U, roughness.x, roughness.y, ior, 2);
        bsdf.throughput = color(1.0);
    }
}
