//
// TM & (c) 2019 Lucasfilm Entertainment Company Ltd. and Lucasfilm Ltd.
// All rights reserved.  See LICENSE.txt for license.
//

#ifndef MATERIALX_CROSS_H
#define MATERIALX_CROSS_H

#include <string>

namespace MaterialX
{
namespace Cross
{
    /// Initialize global state necessary for cross-compilation.
    void initialize();

    /// Finalize global state necessary for cross-compilation.
    void finalize();

    /// Cross-compile GLSL fragment code to HLSL.
    /// @param glslPrivateUniforms GLSL definitions for private uniforms.
    ///     This GLSL code is not included in the VP2 fragment. Unlike public
    ///     uniforms and vertex data which are passed as arguments to the
    ///     fragment's root function by VP2, private uniforms are only
    ///     accessible as uniforms generated by VP2 in the final shader based
    ///     on their XML wrapper definitions. Thus we need to provide their
    ///     GLSL definitions generated separately to the cross-compilation
    ///     toolchain or else GLSL parsing would fail on unknown symbols.
    /// @param glslFragment The GLSL code included in the fragment.
    /// @return HLSL fragment code to be included in the fragment.
    ///
    std::string glslToHlsl(
        const std::string& glslPrivateUniforms,
        const std::string& glslFragment,
        const std::string& fragmentName
    );
}
}

#endif
