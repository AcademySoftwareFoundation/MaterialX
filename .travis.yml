language: cpp

addons:
  apt:
    packages: &packages_base
      - libglu1-mesa-dev
      - libxxf86vm-dev
      - libxrandr-dev
      - libxinerama-dev
      - libxcursor-dev
      - libxi-dev
      - libx11-dev
    packages: *packages_base

matrix:
  include:
    # Standard builds
    - os: linux
      dist: xenial
      compiler: gcc
    - os: linux
      dist: xenial
      compiler: clang
    - os: osx
      osx_image: xcode11
      compiler: gcc
    - os: osx
      osx_image: xcode11
      compiler: clang

    # Custom builds
    - os: linux
      dist: xenial
      compiler: gcc
      env: MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: [*packages_base, g++-6]
    - os: linux
      dist: xenial
      compiler: gcc
      env: MATRIX_EVAL="CC=gcc-9 && CXX=g++-9 && PY=3"
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: [*packages_base, g++-9]
    - os: linux
      dist: bionic
      compiler: clang
      env: MATRIX_EVAL="CC=clang-9 && CXX=clang++-9 && PY=3"
      addons:
        apt:
          packages: [*packages_base, clang-9]

before_install:
  - export PY=2
  - eval "${MATRIX_EVAL}"

script:
  - mkdir build
  - cd build
  - cmake -DMATERIALX_BUILD_PYTHON=ON -DMATERIALX_BUILD_VIEWER=ON -DMATERIALX_TEST_RENDER=OFF -DMATERIALX_PYTHON_VERSION=$PY -DMATERIALX_INSTALL_PYTHON=OFF -DMATERIALX_WARNINGS_AS_ERRORS=ON ..
  - cmake --build . --target install -- -j2
  - ctest -VV --output-on-failure
  - export PYTHONPATH=$PYTHONPATH:$PWD/installed/python
  - cmake -E chdir ../python/MaterialXTest python$PY main.py
  - cmake -E chdir ../python/MaterialXTest python$PY genshader.py
