language: cpp

addons:
  apt:
    packages: &packages_base
      - libglu1-mesa-dev
      - libxxf86vm-dev
      - libxrandr-dev
      - libxinerama-dev
      - libxcursor-dev
      - libxi-dev
      - libx11-dev
    packages: *packages_base

matrix:
  include:
    # Standard builds
    - os: linux
      dist: xenial
      compiler: gcc
      env: CONFIG=Release
    - os: linux
      dist: xenial
      compiler: gcc
      env: CONFIG=RelWithDebInfo
      if: tag IS present
    - os: linux
      dist: xenial
      compiler: clang
      env: CONFIG=Release
    - os: osx
      osx_image: xcode11
      compiler: gcc
      env: CONFIG=Release
    - os: osx
      osx_image: xcode11
      compiler: gcc
      env: CONFIG=RelWithDebInfo
      if: tag IS present
    - os: osx
      osx_image: xcode11
      compiler: clang
      env: CONFIG=Release
 
    # Custom builds
    - os: linux
      dist: bionic
      compiler: gcc
      env: MATRIX_EVAL="CC=gcc-6 && CXX=g++-6 && SHARED=ON && PY=2"
      addons:
        apt:
          packages: [*packages_base, g++-6]
    - os: linux
      dist: bionic
      compiler: gcc
      env: MATRIX_EVAL="CC=gcc-10 && CXX=g++-10"
      addons:
        apt:
          sources:
            sourceline: "ppa:ubuntu-toolchain-r/test"
          packages: [*packages_base, g++-10]
    - os: linux
      dist: bionic
      compiler: clang
      env: MATRIX_EVAL="CC=clang-9 && CXX=clang++-9"
      addons:
        apt:
          packages: [*packages_base, clang-9]
    # WASM build
    - os: linux
      dist: bionic
      compiler: gcc
      env: CONFIG=Wasm
      language: node_js
      node_js:
        - node
      sudo: required
      services:
        - docker
      before_install:
        - docker run -dit --name emscripten -v $(pwd):/src trzeci/emscripten:1.39.7-upstream bash
      script:
        - mkdir build
        - docker exec -it emscripten sh -c "cd build && cmake .. -DMATERIALX_BUILD_JS=ON -DMATERIALX_BUILD_RENDER=OFF -DMATERIALX_BUILD_TESTS=OFF -DMATERIALX_BUILD_GEN_GLSL=OFF -DMATERIALX_BUILD_GEN_OSL=OFF -DMATERIALX_BUILD_GEN_OGSXML=OFF -DMATERIALX_BUILD_GEN_OGSFX=OFF -DMATERIALX_BUILD_GEN_ARNOLD=OFF -DMATERIALX_BUILD_CROSS=OFF -DMATERIALX_BUILD_RUNTIME=OFF -DMATERIALX_BUILD_PYTHON=OFF -DMATERIALX_BUILD_DOCS=OFF -DCMAKE_CXX_FLAGS='-std=c++17' -DMATERIALX_EMSDK_PATH=/emsdk_portable/ && cmake --build . --target install && cd ../source/JsMaterialX/test && npm install && npm run test"



before_install:
  - export SHARED=OFF
  - export PY=3
  - eval "${MATRIX_EVAL}"

script:
  - mkdir build
  - cd build
  - cmake -DMATERIALX_BUILD_PYTHON=ON -DMATERIALX_BUILD_VIEWER=ON -DMATERIALX_BUILD_RUNTIME=ON -DMATERIALX_TEST_RENDER=OFF -DMATERIALX_PYTHON_VERSION=$PY -DMATERIALX_INSTALL_PYTHON=OFF -DMATERIALX_WARNINGS_AS_ERRORS=ON -DCMAKE_BUILD_TYPE="${CONFIG}" ..
  - cmake --build . --target install --config "${CONFIG}" -- -j4
  - ctest -VV --output-on-failure --build-config "${CONFIG}" -j4
  - export PYTHONPATH=$PYTHONPATH:$PWD/installed/python
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/installed/lib
  - cmake -E chdir ../python/MaterialXTest python$PY main.py
  - cmake -E chdir ../python/MaterialXTest python$PY genshader.py

before_deploy:
    # Go to install directory and zip up to create artifact
    - cd ${TRAVIS_BUILD_DIR}/build/installed
    - zip -r ${TRAVIS_BUILD_DIR}/materialx-${TRAVIS_BRANCH}-${TRAVIS_OS_NAME}-${CONFIG}.zip .

deploy:
    # Deploy on main branch. Currently marked as pre-release
    #- provider: releases
    #  api_key:
    #    secure: c9kZbgxrcgNFmTh/TYn+aL4Yqww122YlGNVWaIcKdLpLlRyyrejlyOhnFF1VTnytU6CQGeH580I6IQ21auV1PCAMoD7anWT5sJa5vGo7pCAMFrEKk4PSSSF8LNWw1lHVMw96exI0JHywGx7t2fOYX0COSJab4XK8cM/0FEoJ2/rQYNVXz1oG+4F5B39Jl4zuBfI+oEeD+Q1B6LRMY52uFn1dpRIujYhihBJ3jMwKFzOB0rS/pbKSczQaa4M/HNUvCEupNLKQmnTiHv72JwXRzGsIsqbFJ7e0n6jz2Cv9eGdbVDT2fyEz7Kq8faRPB34wo4PP1DBJAkzpbvejdNvUCXHe+l0MsHbBDe6avjrR7IK1+nu5rT/HzPIqzidPunwKxABfQguYLOE2CZs4hqpwCULGdQ1GR/Hy9vCy7I6MpTw5K9VMRTyt/7MbnVlN/tDy8095Sh9GkJBZPzig7eyw37ylLibXDkmmWx+HrDLV9bP/re+NYk2bXWSHOEr8jgZyxeNJwli2p2WZaMFgfYS0AVdEoujq2b4jWawepkLm1U3UOK71NZLGVjY8tElo3j5NbB6Qbvyr9NNTQbj4BJadiGCfsp57QA1/G4UPXaWSvGWjHUnHkDyUl6AtglB9iciTc6mxxWGS57aPNCsbE+NRRV4E9abBycTeJd2nrLlej1I=
    #  file: ${TRAVIS_BUILD_DIR}/materialx-${TRAVIS_BRANCH}-${TRAVIS_OS_NAME}-${CONFIG}.zip
    #  prerelease: true
    #  skip_cleanup: true
    #  on:
    #    repo: autodesk-forks/MaterialX
    #    # Pick a branch to use.
    #    branch: adsk_config/shaderx
    #    condition: "$CC = gcc"

    # Deploy on tags. Currently marked as pre-release
    - provider: releases
      api_key:
        secure: c9kZbgxrcgNFmTh/TYn+aL4Yqww122YlGNVWaIcKdLpLlRyyrejlyOhnFF1VTnytU6CQGeH580I6IQ21auV1PCAMoD7anWT5sJa5vGo7pCAMFrEKk4PSSSF8LNWw1lHVMw96exI0JHywGx7t2fOYX0COSJab4XK8cM/0FEoJ2/rQYNVXz1oG+4F5B39Jl4zuBfI+oEeD+Q1B6LRMY52uFn1dpRIujYhihBJ3jMwKFzOB0rS/pbKSczQaa4M/HNUvCEupNLKQmnTiHv72JwXRzGsIsqbFJ7e0n6jz2Cv9eGdbVDT2fyEz7Kq8faRPB34wo4PP1DBJAkzpbvejdNvUCXHe+l0MsHbBDe6avjrR7IK1+nu5rT/HzPIqzidPunwKxABfQguYLOE2CZs4hqpwCULGdQ1GR/Hy9vCy7I6MpTw5K9VMRTyt/7MbnVlN/tDy8095Sh9GkJBZPzig7eyw37ylLibXDkmmWx+HrDLV9bP/re+NYk2bXWSHOEr8jgZyxeNJwli2p2WZaMFgfYS0AVdEoujq2b4jWawepkLm1U3UOK71NZLGVjY8tElo3j5NbB6Qbvyr9NNTQbj4BJadiGCfsp57QA1/G4UPXaWSvGWjHUnHkDyUl6AtglB9iciTc6mxxWGS57aPNCsbE+NRRV4E9abBycTeJd2nrLlej1I=
      file: ${TRAVIS_BUILD_DIR}/materialx-${TRAVIS_BRANCH}-${TRAVIS_OS_NAME}-${CONFIG}.zip
      prerelease: true
      skip_cleanup: true
      on:
        repo: autodesk-forks/MaterialX
        #all_branches: true
        branch: adsk_config/release
        tags: true
        condition: "$CC = gcc"
