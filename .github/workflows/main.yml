name: main

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
  workflow_dispatch:

jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - name: Linux_GCC_5_Python27
          os: ubuntu-18.04
          compiler: gcc
          compiler_version: "5"
          python: 2.7
          cmake_config: -DMATERIALX_PYTHON_VERSION=2 -DMATERIALX_BUILD_SHARED_LIBS=ON
          run_on_push : OFF

        - name: Linux_GCC_6_Python37
          os: ubuntu-18.04
          compiler: gcc
          compiler_version: "6"
          python: 3.7
          run_on_push : OFF

        - name: Linux_GCC_10_Python37
          os: ubuntu-20.04
          compiler: gcc
          compiler_version: "10"
          python: 3.7
          test_generate: ON
          test_render: ON
          run_on_push : ON

        - name: MacOS_Xcode_10_Python27
          os: macos-10.15
          compiler: xcode
          compiler_version: "10.3"
          python: 2.7
          cmake_config: -DMATERIALX_PYTHON_VERSION=2 -DMATERIALX_BUILD_SHARED_LIBS=ON
          run_on_push : OFF

        - name: MacOS_Xcode_11_Python37
          os: macos-10.15
          compiler: xcode
          compiler_version: "11.7"
          python: 3.7
          run_on_push : ON

        - name: MacOS_Xcode_12_Python37
          os: macos-10.15
          compiler: xcode
          compiler_version: "12.2"
          python: 3.7
          cmake_config: -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64"
          test_generate: ON
          run_on_push : OFF

        - name: Windows_VS2017_Win32_Python27
          os: windows-2016
          architecture: x86
          python: 2.7
          cmake_config: -G "Visual Studio 15 2017" -A "Win32" -DMATERIALX_BUILD_SHARED_LIBS=ON
          run_on_push : OFF

        - name: Windows_VS2017_x64_Python37
          os: windows-2016
          architecture: x64
          python: 3.7
          cmake_config: -G "Visual Studio 15 2017" -A "x64"
          run_on_push : OFF

        - name: Windows_VS2019_x64_Python38
          os: windows-2019
          architecture: x64
          python: 3.8
          cmake_config: -G "Visual Studio 16 2019" -A "x64"
          test_generate: ON
          run_on_push : ON

    steps:
    - name: Sync Repository
      if: ${{ github.event_name == 'pull_request' || matrix.run_on_push == 'ON' || github.ref == 'refs/heads/adsk_contrib/dev' }}
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install Dependencies (Linux)
      if: ${{ runner.os == 'Linux' && ( github.event_name == 'pull_request' || matrix.run_on_push == 'ON' || github.ref == 'refs/heads/adsk_contrib/dev' ) }}
      run: |
        sudo apt-get update
        sudo apt-get install libglu1-mesa-dev xorg-dev
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          sudo apt-get install -y g++-${{ matrix.compiler_version }} g++-${{ matrix.compiler_version }}-multilib
          echo "CC=gcc-${{ matrix.compiler_version }}" >> $GITHUB_ENV
          echo "CXX=g++-${{ matrix.compiler_version }}" >> $GITHUB_ENV
        else
          sudo apt-get install -y clang-${{ matrix.compiler_version }} g++-multilib
          echo "CC=clang-${{ matrix.compiler_version }}" >> $GITHUB_ENV
          echo "CXX=clang++-${{ matrix.compiler_version }}" >> $GITHUB_ENV
        fi

    - name: Install Dependencies (MacOS)
      if: ${{ runner.os == 'macOS' && ( github.event_name == 'pull_request' || matrix.run_on_push == 'ON' || github.ref == 'refs/heads/adsk_contrib/dev' ) }}
      run: |
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          brew install gcc@${{ matrix.compiler_version }}
          echo "CC=gcc-${{ matrix.compiler_version }}" >> $GITHUB_ENV
          echo "CXX=g++-${{ matrix.compiler_version }}" >> $GITHUB_ENV
        else
          ls -ls /Applications/
          sudo xcode-select -switch /Applications/Xcode_${{ matrix.compiler_version }}.app
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
        fi

    - name: Install Python ${{ matrix.python }}
      if: ${{ ( github.event_name == 'pull_request' || matrix.run_on_push == 'ON' || github.ref == 'refs/heads/adsk_contrib/dev' ) }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
        architecture: ${{ matrix.architecture }}

    - name: Create Build Directory
      if: ${{ ( github.event_name == 'pull_request' || matrix.run_on_push == 'ON' || github.ref == 'refs/heads/adsk_contrib/dev' ) }}
      run: mkdir build
      
    - name: CMake Generate
      if: ${{ ( github.event_name == 'pull_request' || matrix.run_on_push == 'ON' || github.ref == 'refs/heads/adsk_contrib/dev' ) }}
      run: cmake -DMATERIALX_BUILD_PYTHON=ON -DMATERIALX_BUILD_VIEWER=ON -DMATERIALX_TEST_RENDER=OFF -DMATERIALX_WARNINGS_AS_ERRORS=ON ${{matrix.cmake_config}} ..
      working-directory: build

    - name: CMake Build
      if: ${{ ( github.event_name == 'pull_request' || matrix.run_on_push == 'ON' || github.ref == 'refs/heads/adsk_contrib/dev' ) }}
      run: cmake --build . --target install --config Release --parallel 2
      working-directory: build

    - name: Initialize Virtual Framebuffer
      if: ${{ matrix.test_render == 'ON' && runner.os == 'Linux' && ( github.event_name == 'pull_request' || github.ref == 'refs/heads/adsk_contrib/dev' ) }}
      run: |
        Xvfb :1 -screen 0 1280x960x24 &
        echo "DISPLAY=:1" >> $GITHUB_ENV
        echo "MESA_GL_VERSION_OVERRIDE=4.0FC" >> $GITHUB_ENV
        echo "MESA_GLSL_VERSION_OVERRIDE=400" >> $GITHUB_ENV
        echo "GALLIUM_DRIVER=softpipe" >> $GITHUB_ENV

    - name: Set Runtime Path (Windows)
      if: ${{ runner.os == 'Windows' && ( github.event_name == 'pull_request' || matrix.run_on_push == 'ON' || github.ref == 'refs/heads/adsk_contrib/dev') }}
      run: echo "$PWD" | Out-File -FilePath $env:GITHUB_PATH -Append
      working-directory: build/installed/bin

    - name: CMake Unit Tests
      if: ${{ github.event_name == 'pull_request' || matrix.run_on_push == 'ON' || github.ref == 'refs/heads/adsk_contrib/dev' }}
      run: ctest -VV --output-on-failure --build-config Release
      working-directory: build

    - name: Python Tests
      if: ${{ github.event_name == 'pull_request' || matrix.run_on_push == 'ON' || github.ref == 'refs/heads/adsk_contrib/dev' }}
      run: |
        python MaterialXTest/main.py
        python MaterialXTest/genshader.py
        python Scripts/mxupdate.py ../resources/Materials/TestSuite/stdlib/upgrade --yes
        python Scripts/mxvalidate.py ../resources/Materials/Examples/StandardSurface/standard_surface_marble_solid.mtlx --verbose
        python Scripts/mxdoc.py ../libraries/pbrlib/pbrlib_defs.mtlx
      working-directory: python

    - name: Generation Tests
      if: ${{ ( github.event_name == 'pull_request' || matrix.run_on_push == 'ON' || github.ref == 'refs/heads/adsk_contrib/dev' ) && matrix.test_generate == 'ON' }}
      run: |
        mkdir build/generate
        python python/Scripts/generateShader.py resources/Materials/Examples/StandardSurface/standard_surface_look_brass_tiled.mtlx --path "." --outputPath "build/generate/" --target "glsl"
        python python/Scripts/generateShader.py resources/Materials/Examples/StandardSurface/standard_surface_look_brass_tiled.mtlx --path "." --outputPath "build/generate/" --target "osl"
        python python/Scripts/generateShader.py resources/Materials/Examples/StandardSurface/standard_surface_look_brass_tiled.mtlx --path "." --outputPath "build/generate/" --target "mdl"

    - name: Render Tests
      if: ${{ matrix.test_render == 'ON' && ( github.event_name == 'pull_request' || github.ref == 'refs/heads/adsk_contrib/dev' ) }}
      run: |
        mkdir build/render
        python python/Scripts/baketextures.py resources/Materials/Examples/StandardSurface/standard_surface_brass_tiled.mtlx build/render/brass_tiled_baked.mtlx --path .
        python python/Scripts/baketextures.py resources/Materials/Examples/StandardSurface/standard_surface_brass_tiled.mtlx build/render/brass_average_baked.mtlx --average --path .
        build/installed/bin/MaterialXView --material build/render/brass_average_baked.mtlx --mesh resources/Geometry/sphere.obj --screenWidth 128 --screenHeight 128 --cameraZoom 1.4 --captureFilename build/render/Viewer_BrassAverage.png

    - name: Upload Installed Package
      uses: actions/upload-artifact@v2
      if: ${{ github.event_name == 'pull_request' || github.ref == 'refs/heads/adsk_contrib/dev' }}
      with:
        name: MaterialX_${{ matrix.name }}
        path: build/installed/

    - name: Upload Renders
      uses: actions/upload-artifact@v2
      if: ${{ matrix.test_render == 'ON' && ( github.event_name == 'pull_request' || github.ref == 'refs/heads/adsk_contrib/dev' ) }}
      with:
        name: Renders_${{ matrix.name }}
        path: build/render/

    - name: Upload Shaders
      uses: actions/upload-artifact@v2
      if: ${{  matrix.test_generate == 'ON' && ( github.event_name == 'pull_request' || github.ref == 'refs/heads/adsk_contrib/dev' ) }}
      with:
        name: Shaders_${{ matrix.name }}
        path: build/generate/
